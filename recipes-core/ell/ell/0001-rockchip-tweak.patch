From 4ca4627ff794a9aaf224261431c316a02988bbed Mon Sep 17 00:00:00 2001
From: Ponmadasamy Muthuraj <ponmadasamy@live.com>
Date: Sat, 26 Jun 2021 08:48:19 +0530
Subject: [PATCH] rockchip tweak

---
 ell/genl.c | 8 ++++----
 ell/rtnl.c | 3 ++-
 2 files changed, 6 insertions(+), 5 deletions(-)

diff --git a/ell/genl.c b/ell/genl.c
index 6480a17..7b0b43a 100644
--- a/ell/genl.c
+++ b/ell/genl.c
@@ -792,10 +792,10 @@ static struct l_genl_msg *msg_create(const struct nlmsghdr *nlmsg)
 
 		msg->error = err->error;
 
-		if (!(nlmsg->nlmsg_flags & NLM_F_ACK_TLVS))
+		if (!(nlmsg->nlmsg_flags & 0x200))
 			goto done;
 
-		if (!(nlmsg->nlmsg_flags & NLM_F_CAPPED))
+		if (!(nlmsg->nlmsg_flags & 0x100))
 			offset = err->msg.nlmsg_len - sizeof(struct nlmsghdr);
 
 		if (nlmsg->nlmsg_len < offset)
@@ -806,7 +806,7 @@ static struct l_genl_msg *msg_create(const struct nlmsghdr *nlmsg)
 
 		for (; NLA_OK(nla, len); nla = NLA_NEXT(nla, len)) {
 			if ((nla->nla_type & NLA_TYPE_MASK) !=
-					NLMSGERR_ATTR_MSG)
+					1)
 				continue;
 
 			msg->error_msg = l_strdup(NLA_DATA(nla));
@@ -1130,7 +1130,7 @@ LIB_EXPORT struct l_genl *l_genl_new(void)
 		goto err;
 
 	/* Try setting EXT_ACK, but ignore the error if it isn't set */
-	setsockopt(fd, SOL_NETLINK, NETLINK_EXT_ACK,
+	setsockopt(fd, SOL_NETLINK, 11,
 					&ext_ack, sizeof(ext_ack));
 
 	genl = l_new(struct l_genl, 1);
diff --git a/ell/rtnl.c b/ell/rtnl.c
index dc83937..9283b8a 100644
--- a/ell/rtnl.c
+++ b/ell/rtnl.c
@@ -25,8 +25,9 @@
 #endif
 
 #define _GNU_SOURCE
-#include <linux/if.h>
 #include <sys/socket.h>
+#include <sys/types.h>
+#include <linux/if.h>
 #include <arpa/inet.h>
 
 #include "util.h"
