From 22d196d70b7e4a8b48222b9bbb665b5c3c554ee3 Mon Sep 17 00:00:00 2001
From: Ponmadasamy Muthuraj <ponmadasamy@live.com>
Date: Fri, 23 Jul 2021 17:38:51 +0530
Subject: [PATCH] ADD: Compiler error fix

WHY: to satisfy compiler

HOW:

WIP:

TAGS:

AFFECTED:
---
 extensions/LUA/lua/ltablib.c   | 2 +-
 extensions/LUA/xt_LUA_target.c | 2 +-
 extensions/libxt_geoip.c       | 4 +++-
 3 files changed, 5 insertions(+), 3 deletions(-)

diff --git a/extensions/LUA/lua/ltablib.c b/extensions/LUA/lua/ltablib.c
index 2b9e115..b8bbab2 100644
--- a/extensions/LUA/lua/ltablib.c
+++ b/extensions/LUA/lua/ltablib.c
@@ -137,7 +137,7 @@ static void addfield (lua_State *L, luaL_Buffer *b, int i) {
   if (!lua_isstring(L, -1))
     luaL_error(L, "invalid value (%s) at index %d in table for "
                   LUA_QL("concat"), luaL_typename(L, -1), i);
-    luaL_addvalue(b);
+  luaL_addvalue(b);
 }
 
 
diff --git a/extensions/LUA/xt_LUA_target.c b/extensions/LUA/xt_LUA_target.c
index 505c858..14831ac 100644
--- a/extensions/LUA/xt_LUA_target.c
+++ b/extensions/LUA/xt_LUA_target.c
@@ -136,7 +136,7 @@ static bool load_script_into_state(uint32_t  state_id, unsigned long script_size
 	int32_t ret;
 	struct lua_env * env = kmalloc(sizeof(struct lua_env), GFP_KERNEL);
 
-	if (!script_size > 0) {
+	if (!(script_size > 0)) {
 		pr_debug("LUA [%d]: script_size %lu < 0\n", state_id, script_size);
 		return false;
 	}
diff --git a/extensions/libxt_geoip.c b/extensions/libxt_geoip.c
index b91cd5d..b47a2f6 100644
--- a/extensions/libxt_geoip.c
+++ b/extensions/libxt_geoip.c
@@ -78,6 +78,7 @@ geoip_get_subnets(const char *code, uint32_t *count, uint8_t nfproto)
 #if __BYTE_ORDER == __LITTLE_ENDIAN
 	unsigned int n;
 #endif
+	ssize_t ret;
 
 	/* Use simple integer vector files */
 	if (nfproto == NFPROTO_IPV6)
@@ -110,7 +111,7 @@ geoip_get_subnets(const char *code, uint32_t *count, uint8_t nfproto)
 	subnets = malloc(sb.st_size);
 	if (subnets == NULL)
 		xtables_error(OTHER_PROBLEM, "geoip: insufficient memory");
-	read(fd, subnets, sb.st_size);
+	ret = read(fd, subnets, sb.st_size);
 	close(fd);
 
 #if __BYTE_ORDER == __LITTLE_ENDIAN
@@ -131,6 +132,7 @@ geoip_get_subnets(const char *code, uint32_t *count, uint8_t nfproto)
 		}
 	}
 #endif
+	(void) ret;
 	return subnets;
 }
 
